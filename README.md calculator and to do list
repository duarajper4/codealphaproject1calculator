# code alpha project# 1 task 1 calculator # code alpha project 1 task 2 to do list application.

Key Features:

Date Input: Separate fields for day, month, and year with clear labels
Age Calculation: Shows exact age in years, months, and days
Input Validation: Comprehensive validation for all edge cases
Next Birthday: Calculates and displays days until next birthday
Responsive Design: Works on mobile and desktop devices
**
**Technical Implementation:****
**HTML Structure:**

Clean form with separate number inputs for day, month, year
Result display area with animated cards
Error message display

**CSS Styling:**

Modern gradient background and card design
Hover effects and animations
Responsive layout that works on all screen sizes
Visual feedback for user interactions

****JavaScript Functionality:**
DOM Manipulation: Gets input values and updates display elements
Date Object Usage: Creates and manipulates JavaScript Date objects
Input Validation: Checks for valid dates, handles edge cases like leap years
Age Calculation: Accurate calculation accounting for months with different days
Error Handling: Clear error messages for invalid inputs

**Key JavaScript Concepts Demonstrated:**
Date Object: Uses new Date() constructor and date methods
Input Validation: Checks for valid ranges and date validity
DOM Manipulation: Updates elements using getElementById() and textContent
Event Handling: Button clicks and Enter key support
Mathematical Calculations: Age calculation with proper month/day adjustments


# code alpha project 1 task 2 to do list application.
Key Features:
✅ CRUD Operations

Create: Add new tasks with input validation
Read: Display tasks with filtering options
Update: Edit tasks inline with save/cancel options
Delete: Remove individual tasks or clear all completed

✅ Task Management

Add Tasks: Enter tasks via input field or Enter key
Mark Complete: Click checkboxes to toggle completion status
Edit Tasks: Click edit button for inline editing
Delete Tasks: Individual task deletion with confirmation
Filter Tasks: View All, Active, or Completed tasks only

✅ Local Storage Persistence

All tasks are automatically saved to localStorage
Data persists between browser sessions
Includes error handling for storage operations

✅ Advanced Features

Statistics Dashboard: Live counters for total, completed, and pending tasks
Clear Completed: Bulk delete all completed tasks
Empty State Messages: Context-aware messages when no tasks exist
Responsive Design: Works perfectly on mobile and desktop
Keyboard Support: Enter to add tasks, Escape to cancel edits

Technical Implementation:
HTML Structure

Semantic HTML with proper form elements
Accessible markup with proper labels and roles
Responsive viewport configuration

CSS Styling

Modern gradient design with smooth animations
Hover effects and visual feedback
Mobile-first responsive design
CSS transitions and keyframe animations

JavaScript Functionality
Event Handling

click events for buttons and checkboxes
keypress events for Enter key support
submit event prevention for form handling

CRUD Operations

addTask() - Creates new tasks with validation
toggleTask() - Updates task completion status
editTask() - Enables inline editing mode
deleteTask() - Removes tasks with confirmation
clearCompletedTasks() - Bulk deletion

Local Storage

saveTasks() - Persists data to localStorage
loadTasks() - Retrieves data on page load
Error handling for storage operations

Data Management

Task objects with unique IDs, text, completion status, and timestamps
Array manipulation for filtering and sorting
State management for current filter and editing modes

Key JavaScript Concepts Demonstrated

Array Methods: filter(), find(), forEach(), push()
DOM Manipulation: createElement(), innerHTML, classList
Event Listeners: addEventListener(), onclick handlers
Local Storage: localStorage.setItem(), localStorage.getItem()
JSON: JSON.stringify(), JSON.parse()
Error Handling: try-catch blocks for localStorage operations
Conditional Logic: Task filtering and state management
Template Literals: Dynamic HTML generation


